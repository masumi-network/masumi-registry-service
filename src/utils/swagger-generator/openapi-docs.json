{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Template API",
        "description": "This is the default API from a template"
    },
    "servers": [
        {
            "url": "./../api/v1/"
        }
    ],
    "components": {
        "securitySchemes": {
            "API-Key": {
                "type": "apiKey",
                "in": "header",
                "name": "token",
                "description": "API key authentication via header (token)"
            }
        },
        "schemas": {},
        "parameters": {}
    },
    "paths": {
        "/health/": {
            "get": {
                "summary": "Get the status of the API server",
                "responses": {
                    "200": {
                        "description": "Object with health and version information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "version": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "version"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "data": {
                                            "type": "masumi-registry",
                                            "version": "0.1.2"
                                        },
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/payment-information/": {
            "get": {
                "description": "Get payment information for a registry entry",
                "summary": "REQUIRES API KEY Authentication (+user)",
                "tags": [
                    "payment-information"
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 250
                        },
                        "required": true,
                        "name": "registryIdentifier",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 250
                        },
                        "required": true,
                        "name": "assetIdentifier",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Registry entries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "registry": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "WEB3_CARDANO_V1"
                                                            ]
                                                        },
                                                        "identifier": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "url": {
                                                            "type": "string",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "required": [
                                                        "type",
                                                        "identifier",
                                                        "url"
                                                    ]
                                                },
                                                "paymentIdentifier": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "paymentIdentifier": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "paymentType": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "WEB3_CARDANO_V1"
                                                                ]
                                                            },
                                                            "sellerVKey": {
                                                                "type": "string",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "required": [
                                                            "paymentIdentifier",
                                                            "paymentType",
                                                            "sellerVKey"
                                                        ]
                                                    }
                                                },
                                                "capability": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "version": {
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "version",
                                                        "description"
                                                    ]
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ONLINE",
                                                        "OFFLINE",
                                                        "DEREGISTERED",
                                                        "INVALID"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string"
                                                },
                                                "lastUptimeCheck": {
                                                    "type": "string"
                                                },
                                                "uptimeCount": {
                                                    "type": "number"
                                                },
                                                "uptimeCheckCount": {
                                                    "type": "number"
                                                },
                                                "api_url": {
                                                    "type": "string"
                                                },
                                                "author_name": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "author_organization": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "author_contact": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "privacy_policy": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "terms_and_condition": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "other_legal": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "requests_per_hour": {
                                                    "type": "number",
                                                    "nullable": true
                                                },
                                                "tags": {
                                                    "type": "array",
                                                    "nullable": true,
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "value"
                                                        ]
                                                    }
                                                },
                                                "identifier": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "registry",
                                                "paymentIdentifier",
                                                "capability",
                                                "name",
                                                "description",
                                                "status",
                                                "id",
                                                "lastUptimeCheck",
                                                "uptimeCount",
                                                "uptimeCheckCount",
                                                "api_url",
                                                "author_name",
                                                "author_organization",
                                                "author_contact",
                                                "image",
                                                "privacy_policy",
                                                "terms_and_condition",
                                                "other_legal",
                                                "requests_per_hour",
                                                "tags",
                                                "identifier"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "data": {
                                            "name": "Example API",
                                            "description": "Example Capability description",
                                            "status": "ONLINE",
                                            "registry": {
                                                "type": "WEB3_CARDANO_V1",
                                                "identifier": "0000000000000000000000000000000000000000000000000000000000000000",
                                                "url": null
                                            },
                                            "author_contact": null,
                                            "author_name": null,
                                            "image": "testimage.de",
                                            "other_legal": null,
                                            "privacy_policy": null,
                                            "requests_per_hour": 15,
                                            "tags": null,
                                            "terms_and_condition": "If the answer is 42 what was the question",
                                            "uptimeCheckCount": 10,
                                            "uptimeCount": 8,
                                            "lastUptimeCheck": "2025-01-28T12:28:04.323Z",
                                            "api_url": "https://localhost:3000/api/",
                                            "capability": {
                                                "name": "Example Capability",
                                                "version": "1.0.0",
                                                "description": "Example Capability description"
                                            },
                                            "author_organization": "MASUMI",
                                            "identifier": "222222222222222222222222222222222222222222222222222222222222222222",
                                            "id": "h0llave89inmbuxiwq0ghjat",
                                            "paymentIdentifier": [
                                                {
                                                    "paymentIdentifier": "addr1333333333333333333333333333333333333333333333333333333333333333",
                                                    "paymentType": "WEB3_CARDANO_V1",
                                                    "sellerVKey": "sellerVKey"
                                                }
                                            ]
                                        },
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/registry-entry/": {
            "post": {
                "description": "Query the registry for available and online (health-checked) entries. Registry filter, allows pagination, filtering by payment type and capability and optional date filters (to force update any entries checked before the specified date. Warning: this might take a bit of time as response is not cached). If no filter is set, only online entries are returned.",
                "summary": "REQUIRES API KEY Authentication (+user)",
                "tags": [
                    "registry-entry"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "network": {
                                        "type": "string",
                                        "enum": [
                                            "PREPROD",
                                            "MAINNET"
                                        ]
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 50,
                                        "default": 10
                                    },
                                    "cursorId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 50
                                    },
                                    "filter": {
                                        "type": "object",
                                        "properties": {
                                            "paymentTypes": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "enum": [
                                                        "WEB3_CARDANO_V1"
                                                    ]
                                                },
                                                "maxItems": 5
                                            },
                                            "status": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ONLINE",
                                                        "OFFLINE",
                                                        "DEREGISTERED",
                                                        "INVALID"
                                                    ]
                                                },
                                                "maxItems": 5
                                            },
                                            "registryIdentifier": {
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 250
                                            },
                                            "assetIdentifier": {
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 250
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 150
                                                }
                                            },
                                            "capability": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "minLength": 1,
                                                        "maxLength": 150
                                                    },
                                                    "version": {
                                                        "type": "string",
                                                        "maxLength": 150
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ]
                                            }
                                        }
                                    },
                                    "minRegistryDate": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        ]
                                    },
                                    "minHealthCheckDate": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "network"
                                ],
                                "example": {
                                    "limit": 10,
                                    "cursorId": "last_paginated_item",
                                    "network": "PREPROD",
                                    "filter": {
                                        "registryIdentifier": "registry_identifier",
                                        "assetIdentifier": "asset_identifier",
                                        "paymentTypes": [
                                            "WEB3_CARDANO_V1"
                                        ],
                                        "status": [
                                            "ONLINE",
                                            "OFFLINE"
                                        ],
                                        "capability": {
                                            "name": "Example Capability",
                                            "version": "Optional version"
                                        }
                                    },
                                    "minRegistryDate": "2025-01-28T12:28:04.324Z",
                                    "minHealthCheckDate": "2025-01-28T12:28:04.324Z"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registry entries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "entries": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "registry": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "WEB3_CARDANO_V1"
                                                                        ]
                                                                    },
                                                                    "identifier": {
                                                                        "type": "string",
                                                                        "nullable": true
                                                                    },
                                                                    "url": {
                                                                        "type": "string",
                                                                        "nullable": true
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type",
                                                                    "identifier",
                                                                    "url"
                                                                ]
                                                            },
                                                            "capability": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "version": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "nullable": true
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "version",
                                                                    "description"
                                                                ]
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "ONLINE",
                                                                    "OFFLINE",
                                                                    "DEREGISTERED",
                                                                    "INVALID"
                                                                ]
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "lastUptimeCheck": {
                                                                "type": "string"
                                                            },
                                                            "uptimeCount": {
                                                                "type": "number"
                                                            },
                                                            "uptimeCheckCount": {
                                                                "type": "number"
                                                            },
                                                            "api_url": {
                                                                "type": "string"
                                                            },
                                                            "author_name": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "author_organization": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "author_contact": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "privacy_policy": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "terms_and_condition": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "other_legal": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "requests_per_hour": {
                                                                "type": "number",
                                                                "nullable": true
                                                            },
                                                            "tags": {
                                                                "type": "array",
                                                                "nullable": true,
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "value"
                                                                    ]
                                                                }
                                                            },
                                                            "identifier": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "registry",
                                                            "capability",
                                                            "name",
                                                            "description",
                                                            "status",
                                                            "id",
                                                            "lastUptimeCheck",
                                                            "uptimeCount",
                                                            "uptimeCheckCount",
                                                            "api_url",
                                                            "author_name",
                                                            "author_organization",
                                                            "author_contact",
                                                            "image",
                                                            "privacy_policy",
                                                            "terms_and_condition",
                                                            "other_legal",
                                                            "requests_per_hour",
                                                            "tags",
                                                            "identifier"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "entries"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "data": {
                                            "entries": [
                                                {
                                                    "name": "Example API",
                                                    "description": "Example Capability description",
                                                    "status": "ONLINE",
                                                    "registry": {
                                                        "type": "WEB3_CARDANO_V1",
                                                        "identifier": "0000000000000000000000000000000000000000000000000000000000000000",
                                                        "url": null
                                                    },
                                                    "author_contact": null,
                                                    "author_name": null,
                                                    "image": "testimage.de",
                                                    "other_legal": null,
                                                    "privacy_policy": null,
                                                    "requests_per_hour": 15,
                                                    "tags": null,
                                                    "terms_and_condition": "If the answer is 42 what was the question",
                                                    "uptimeCheckCount": 10,
                                                    "uptimeCount": 8,
                                                    "lastUptimeCheck": "2025-01-28T12:28:04.324Z",
                                                    "api_url": "https://localhost:3000/api/",
                                                    "capability": {
                                                        "name": "Example Capability",
                                                        "version": "1.0.0",
                                                        "description": "Example Capability description"
                                                    },
                                                    "author_organization": "MASUMI",
                                                    "identifier": "222222222222222222222222222222222222222222222222222222222222222222",
                                                    "id": "qk8xmwp1auuf5kzbnsthz0ee"
                                                }
                                            ]
                                        },
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/registry-source/": {
            "get": {
                "description": "Gets all registry sources",
                "summary": "REQUIRES API KEY Authentication (+admin)",
                "tags": [
                    "registry-source"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "maxLength": 550
                        },
                        "required": false,
                        "name": "cursorId",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 50,
                            "default": 10
                        },
                        "required": false,
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Registry sources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "sources": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "WEB3_CARDANO_V1"
                                                                ]
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "identifier": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "note": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "latestPage": {
                                                                "type": "integer",
                                                                "nullable": true,
                                                                "minimum": 0,
                                                                "maximum": 1000000
                                                            },
                                                            "latestIdentifier": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "apiKey": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "network": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "enum": [
                                                                    "PREPROD",
                                                                    "MAINNET"
                                                                ]
                                                            }
                                                        },
                                                        "required": [
                                                            "id",
                                                            "type",
                                                            "url",
                                                            "identifier",
                                                            "note",
                                                            "latestPage",
                                                            "latestIdentifier",
                                                            "apiKey",
                                                            "network"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "sources"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "data": {
                                            "sources": [
                                                {
                                                    "id": "unique-cuid-v2-auto-generated",
                                                    "type": "WEB3_CARDANO_V1",
                                                    "identifier": "optional_identifier",
                                                    "url": "optional_url",
                                                    "note": "optional_note",
                                                    "apiKey": "optional_apiKey",
                                                    "network": "PREPROD",
                                                    "latestPage": 1,
                                                    "latestIdentifier": "optional_latestIdentifier"
                                                }
                                            ]
                                        },
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new registry source",
                "summary": "REQUIRES API KEY Authentication (+admin)",
                "tags": [
                    "registry-source"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "WEB3_CARDANO_V1"
                                        ]
                                    },
                                    "identifier": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "note": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "apiKey": {
                                        "type": "string"
                                    },
                                    "network": {
                                        "type": "string",
                                        "nullable": true,
                                        "enum": [
                                            "PREPROD",
                                            "MAINNET"
                                        ]
                                    }
                                },
                                "required": [
                                    "type",
                                    "identifier",
                                    "note",
                                    "apiKey",
                                    "network"
                                ],
                                "example": {
                                    "type": "WEB3_CARDANO_V1",
                                    "identifier": "optional_identifier",
                                    "note": "optional_note",
                                    "apiKey": "apiKey",
                                    "network": "PREPROD"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registry source",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "data": {
                                            "id": "unique-cuid-v2-auto-generated"
                                        },
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a registry source",
                "summary": "REQUIRES API KEY Authentication (+admin)",
                "tags": [
                    "registry-source"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "maxLength": 150
                                    },
                                    "note": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "apiKey": {
                                        "type": "string"
                                    }
                                },
                                "example": {
                                    "id": "unique-cuid-v2-auto-generated",
                                    "note": "optional_note",
                                    "apiKey": "optional_apiKey"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registry source",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "data": {
                                            "id": "unique-cuid-v2-auto-generated"
                                        },
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Updates a registry source",
                "summary": "REQUIRES API KEY Authentication (+admin)",
                "tags": [
                    "registry-source"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "maxLength": 150
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "example": {
                                    "id": "unique-cuid-v2-auto-generated"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registry source",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "data": {
                                            "id": "unique-cuid-v2-auto-generated"
                                        },
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/capability/": {
            "get": {
                "description": "Gets all capabilities that are currently online",
                "summary": "REQUIRES API KEY Authentication (+user)",
                "tags": [
                    "capability"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 10
                        },
                        "required": false,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "name": "cursorId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Registry entries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "capabilities": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "version": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "id",
                                                            "name",
                                                            "version"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "capabilities"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "data": {
                                            "capabilities": [
                                                {
                                                    "id": "unique-cuid-v2-auto-generated",
                                                    "name": "Example Capability",
                                                    "version": "1.0.0"
                                                }
                                            ]
                                        },
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api-key-status/": {
            "get": {
                "description": "Gets the status of an API key",
                "summary": "REQUIRES API KEY Authentication (+user)",
                "tags": [
                    "api-key-status"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API Key Status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "apiKey": {
                                                    "type": "string"
                                                },
                                                "permission": {
                                                    "type": "string",
                                                    "enum": [
                                                        "USER",
                                                        "ADMIN"
                                                    ]
                                                },
                                                "usageLimited": {
                                                    "type": "boolean"
                                                },
                                                "maxUsageCredits": {
                                                    "type": "integer",
                                                    "nullable": true,
                                                    "minimum": 0,
                                                    "maximum": 1000000
                                                },
                                                "accumulatedUsageCredits": {
                                                    "type": "integer",
                                                    "nullable": true,
                                                    "minimum": 0,
                                                    "maximum": 1000000
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ACTIVE",
                                                        "REVOKED"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "apiKey",
                                                "permission",
                                                "usageLimited",
                                                "maxUsageCredits",
                                                "accumulatedUsageCredits",
                                                "status"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "data": {
                                            "apiKey": "masumi-registry-api-key-secret",
                                            "permission": "ADMIN",
                                            "usageLimited": true,
                                            "maxUsageCredits": 1000000,
                                            "accumulatedUsageCredits": 0,
                                            "status": "ACTIVE"
                                        },
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api-key/": {
            "get": {
                "description": "Gets registry sources, can be paginated",
                "summary": "REQUIRES API KEY Authentication (+admin)",
                "tags": [
                    "api-key"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "maxLength": 550
                        },
                        "required": false,
                        "name": "cursorId",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 10
                        },
                        "required": false,
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Registry entries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "apiKeys": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "apiKey": {
                                                                "type": "string"
                                                            },
                                                            "permission": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "USER",
                                                                    "ADMIN"
                                                                ]
                                                            },
                                                            "usageLimited": {
                                                                "type": "boolean"
                                                            },
                                                            "maxUsageCredits": {
                                                                "type": "integer",
                                                                "nullable": true,
                                                                "minimum": 0,
                                                                "maximum": 1000000
                                                            },
                                                            "accumulatedUsageCredits": {
                                                                "type": "integer",
                                                                "nullable": true,
                                                                "minimum": 0,
                                                                "maximum": 1000000
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "ACTIVE",
                                                                    "REVOKED"
                                                                ]
                                                            }
                                                        },
                                                        "required": [
                                                            "apiKey",
                                                            "permission",
                                                            "usageLimited",
                                                            "maxUsageCredits",
                                                            "accumulatedUsageCredits",
                                                            "status"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "apiKeys"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "data": {
                                            "apiKeys": [
                                                {
                                                    "apiKey": "masumi-registry-api-key-secret",
                                                    "permission": "ADMIN",
                                                    "usageLimited": true,
                                                    "maxUsageCredits": 1000000,
                                                    "accumulatedUsageCredits": 0,
                                                    "status": "ACTIVE"
                                                }
                                            ]
                                        },
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Create a new API key",
                "summary": "REQUIRES API KEY Authentication (+admin)",
                "tags": [
                    "api-key"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "usageLimited": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "maxUsageCredits": {
                                        "type": "integer",
                                        "nullable": true,
                                        "minimum": 0,
                                        "maximum": 1000000,
                                        "default": 0
                                    },
                                    "permission": {
                                        "type": "string",
                                        "enum": [
                                            "USER",
                                            "ADMIN"
                                        ],
                                        "default": "USER"
                                    }
                                },
                                "example": {
                                    "permission": "ADMIN",
                                    "usageLimited": true,
                                    "maxUsageCredits": 1000000
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "API Key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "apiKey": {
                                                    "type": "string"
                                                },
                                                "permission": {
                                                    "type": "string",
                                                    "enum": [
                                                        "USER",
                                                        "ADMIN"
                                                    ]
                                                },
                                                "usageLimited": {
                                                    "type": "boolean"
                                                },
                                                "maxUsageCredits": {
                                                    "type": "integer",
                                                    "nullable": true,
                                                    "minimum": 0,
                                                    "maximum": 1000000
                                                },
                                                "accumulatedUsageCredits": {
                                                    "type": "integer",
                                                    "nullable": true,
                                                    "minimum": 0,
                                                    "maximum": 1000000
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ACTIVE",
                                                        "REVOKED"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "apiKey",
                                                "permission",
                                                "usageLimited",
                                                "maxUsageCredits",
                                                "accumulatedUsageCredits",
                                                "status"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "data": {
                                            "id": "unique-cuid-v2-auto-generated",
                                            "status": "ACTIVE",
                                            "apiKey": "masumi-registry-api-key-secret",
                                            "permission": "USER",
                                            "usageLimited": true,
                                            "maxUsageCredits": 1000000,
                                            "accumulatedUsageCredits": 0
                                        },
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "description": "Updates a API key",
                "summary": "REQUIRES API KEY Authentication (+admin)",
                "tags": [
                    "api-key"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "Undefined fields will not be changed",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "apiKey": {
                                        "type": "string",
                                        "maxLength": 550
                                    },
                                    "usageLimited": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "maxUsageCredits": {
                                        "type": "integer",
                                        "nullable": true,
                                        "minimum": 0,
                                        "maximum": 1000000,
                                        "default": 0
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "ACTIVE",
                                            "REVOKED"
                                        ],
                                        "default": "ACTIVE"
                                    }
                                },
                                "required": [
                                    "apiKey"
                                ],
                                "example": {
                                    "apiKey": "id_or_apiKey_api-key-to-update",
                                    "usageLimited": true,
                                    "maxUsageCredits": 1000000
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registry entries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "apiKey": {
                                                    "type": "string"
                                                },
                                                "permission": {
                                                    "type": "string",
                                                    "enum": [
                                                        "USER",
                                                        "ADMIN"
                                                    ]
                                                },
                                                "usageLimited": {
                                                    "type": "boolean"
                                                },
                                                "maxUsageCredits": {
                                                    "type": "integer",
                                                    "nullable": true,
                                                    "minimum": 0,
                                                    "maximum": 1000000
                                                },
                                                "accumulatedUsageCredits": {
                                                    "type": "integer",
                                                    "nullable": true,
                                                    "minimum": 0,
                                                    "maximum": 1000000
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ACTIVE",
                                                        "REVOKED"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "apiKey",
                                                "permission",
                                                "usageLimited",
                                                "maxUsageCredits",
                                                "accumulatedUsageCredits",
                                                "status"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "data": {
                                            "apiKey": "masumi-registry-api-key-secret",
                                            "permission": "USER",
                                            "usageLimited": true,
                                            "maxUsageCredits": 1000000,
                                            "accumulatedUsageCredits": 0,
                                            "status": "ACTIVE"
                                        },
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Removes a API key",
                "summary": "REQUIRES API KEY Authentication (+admin)",
                "tags": [
                    "api-key"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "apiKey": {
                                        "type": "string",
                                        "maxLength": 550
                                    }
                                },
                                "required": [
                                    "apiKey"
                                ],
                                "example": {
                                    "apiKey": "api-key-to-delete"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "API Key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "apiKey": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "apiKey"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "data": {
                                            "apiKey": "deleted-masumi-registry-api-key-secret"
                                        },
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    }
}